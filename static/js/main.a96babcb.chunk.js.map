{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","usersFromServer","find","us","cn","TodoList","todos","map","App","maxId","todosFromServer","reduce","max","current","useState","setTodos","todoTitle","setTodoTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","action","method","onSubmit","event","preventDefault","trim","prevTodos","type","value","placeholder","onChange","target","e","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a96babcb.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React from 'react';\nimport User from '../../types/User';\n\ninterface Props {\n  user: User,\n}\n\nexport const UserInfo: React.FC<Props> = ({\n  user,\n}) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user.email}`}>\n      {user.name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport User from '../../types/User';\nimport { UserInfo } from '../UserInfo';\nimport Todo from '../../types/Todo';\nimport usersFromServer from '../../api/users';\n\ninterface Props {\n  todo: Todo\n}\n\nexport const TodoInfo: React.FC<Props> = ({\n  todo: {\n    id, title, completed, userId,\n  },\n}) => {\n  const user: User | undefined\n    = usersFromServer.find((us: User) => us.id === userId);\n\n  if (user) {\n    return (\n      <article\n        data-id={id}\n        className={cn('TodoInfo', {\n          'TodoInfo--completed': completed,\n        })}\n      >\n        <h2 className=\"TodoInfo__title\">\n          {title}\n        </h2>\n\n        <UserInfo user={user} />\n      </article>\n    );\n  }\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      <p>No user information available</p>\n    </article>\n  );\n};\n","import Todo from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ninterface Props {\n  todos: Todo[],\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n}) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo: Todo) => {\n        return (\n          <TodoInfo\n            key={todo.id}\n            todo={todo}\n          />\n        );\n      })}\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\nimport { TodoList } from './components/TodoList';\n\nexport const App = () => {\n  const maxId = todosFromServer.reduce((max, current) => (\n    current.id > max ? current.id : max\n  ), 0);\n\n  const [todos, setTodos] = useState(todosFromServer);\n  const [todoTitle, setTodoTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTodoTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n  const handleUserIdChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+e.target.value);\n    setHasUserIdError(false);\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    setHasTitleError(!todoTitle.trim());\n    setHasUserIdError(userId === 0);\n\n    if (!todoTitle.trim() || userId === 0) {\n      return;\n    }\n\n    setTodos((prevTodos) => [\n      ...prevTodos,\n      {\n        id: maxId + 1,\n        title: todoTitle,\n        completed: false,\n        userId,\n      },\n    ]);\n    setTodoTitle('');\n    setUserId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">Add to-do form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        className=\"App__form\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field App__form_field\">\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={todoTitle}\n            placeholder=\"Enter title..\"\n            className=\"titleInput\"\n            onChange={handleTitleChange}\n          />\n\n          {hasTitleError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field App__form_field\">\n          <select\n            data-cy=\"userSelect\"\n            className=\"userSelect\"\n            value={userId}\n            onChange={handleUserIdChange}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {usersFromServer.map((user) => (\n              <option key={user.id} value={user.id}>{user.name}</option>\n            ))}\n          </select>\n\n          {hasUserIdError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          className=\"button button--add\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}